# Multi-Stage Production Build f端r Viktoria Wertheim
FROM node:22-alpine AS deps
WORKDIR /app

# Install pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

# Dependencies installieren
COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile

# Builder Stage
FROM node:22-alpine AS builder
WORKDIR /app

# Build Arguments f端r Environment Variables (mit Default-Werten)
ARG NEXT_PUBLIC_SUPABASE_URL=https://viktoria.headon.pro/supabase
ARG NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE
ARG NEXT_PUBLIC_ADMIN_PASSWORD=Vkt2025SecureAdmin
ARG NEXT_PUBLIC_ADMIN_SECRET=dummy

# Environment Variables f端r Build setzen
ENV NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL
ENV NEXT_PUBLIC_SUPABASE_ANON_KEY=$NEXT_PUBLIC_SUPABASE_ANON_KEY
ENV NEXT_PUBLIC_ADMIN_PASSWORD=$NEXT_PUBLIC_ADMIN_PASSWORD
ENV NEXT_PUBLIC_ADMIN_SECRET=$NEXT_PUBLIC_ADMIN_SECRET

# Dependencies von deps stage kopieren
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Install pnpm in builder stage
RUN corepack enable && corepack prepare pnpm@latest --activate

# Next.js f端r Production bauen
RUN echo "Starting build..." && \
    NODE_ENV=production pnpm run build || (echo "Build failed, showing last logs:" && cat .next/build-trace.log 2>/dev/null || true && exit 1)

# Production Stage
FROM node:22-alpine AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV HOSTNAME="0.0.0.0"
ENV PORT=3000

# System dependencies
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Standalone build und static files kopieren
COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000

CMD ["node", "server.js"]